{"version":3,"sources":["withRoot.tsx","components/index.tsx","index.tsx"],"names":["theme","createMuiTheme","palette","primary","purple","secondary","green","typography","useNextVariants","withRoot","Component","props","react","core_styles","CssBaseline_default","a","Index","state","open","handleClose","_this","setState","handleClick","className","this","classes","root","Dialog_default","onClose","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","color","onClick","Typography_default","variant","gutterBottom","React","withStyles","createStyles","textAlign","paddingTop","spacing","unit","ReactDOM","components","document","getElementById"],"mappings":"uXAQMA,EAAQC,yBAAe,CACzBC,QAAS,CACLC,QAASC,IACTC,UAAWC,KAEfC,WAAY,CACRC,iBAAiB,KAoBVC,MAhBf,SAAqBC,GAajB,OAZA,SAAkBC,GAGd,OACIC,EAAA,cAACC,EAAA,iBAAD,CAAkBb,MAAOA,GAErBY,EAAA,cAACE,EAAAC,EAAD,MACAH,EAAA,cAACF,EAAcC,MCDzBK,6MACFC,MAAQ,CACJC,MAAM,KAGVC,YAAc,WACVC,EAAKC,SAAS,CACVH,MAAM,OAIdI,YAAc,WACVF,EAAKC,SAAS,CACVH,MAAM,6EAKV,OACIN,EAAA,qBAAKW,UAAWC,KAAKb,MAAMc,QAAQC,MAC/Bd,EAAA,cAACe,EAAAZ,EAAD,CAAQG,KAAMM,KAAKP,MAAMC,KAAMU,QAASJ,KAAKL,aACzCP,EAAA,cAACiB,EAAAd,EAAD,8BACAH,EAAA,cAACkB,EAAAf,EAAD,KACIH,EAAA,cAACmB,EAAAhB,EAAD,mBAEJH,EAAA,cAACoB,EAAAjB,EAAD,KACIH,EAAA,cAACqB,EAAAlB,EAAD,CAAQmB,MAAM,UAAUC,QAASX,KAAKL,aAAtC,QAKRP,EAAA,cAACwB,EAAArB,EAAD,CAAYsB,QAAQ,KAAKC,cAAY,GAArC,eAGA1B,EAAA,cAACwB,EAAArB,EAAD,CAAYsB,QAAQ,YAAYC,cAAY,GAA5C,mBAGA1B,EAAA,cAACqB,EAAAlB,EAAD,CACIsB,QAAQ,YACRH,MAAM,YACNC,QAASX,KAAKF,aAHlB,iCArCIiB,aAiDL9B,IAAS+B,IA7DT,SAACxC,GAAD,OACXyC,IAAa,CACTf,KAAM,CACFgB,UAAW,SACXC,WAAiC,GAArB3C,EAAM4C,QAAQC,SAyDdL,CAAmBxB,ICnE3C8B,SAAgBlC,EAAA,cAACmC,EAAD,MAAWC,SAASC,eAAe","file":"static/js/main.3bce8f39.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport green from \"@material-ui/core/colors/green\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n    palette: {\n        primary: purple,\n        secondary: green\n    },\n    typography: {\n        useNextVariants: true\n    }\n});\n\nfunction withRoot<P>(Component: React.ComponentType<P>) {\n    function WithRoot(props: P) {\n        // MuiThemeProvider makes the theme available down the React tree\n        // thanks to React context.\n        return (\n            <MuiThemeProvider theme={theme}>\n                {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n                <CssBaseline />\n                <Component {...props} />\n            </MuiThemeProvider>\n        );\n    }\n\n    return WithRoot;\n}\n\nexport default withRoot;\n","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles, { WithStyles } from \"@material-ui/core/styles/withStyles\";\nimport withRoot from \"../withRoot\";\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        root: {\n            textAlign: \"center\",\n            paddingTop: theme.spacing.unit * 20\n        }\n    });\n\ntype State = {\n    open: boolean;\n};\n\nclass Index extends React.Component<WithStyles<typeof styles>, State> {\n    state = {\n        open: false\n    };\n\n    handleClose = () => {\n        this.setState({\n            open: false\n        });\n    };\n\n    handleClick = () => {\n        this.setState({\n            open: true\n        });\n    };\n\n    render() {\n        return (\n            <div className={this.props.classes.root}>\n                <Dialog open={this.state.open} onClose={this.handleClose}>\n                    <DialogTitle>Super Secret Password</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>1-2-3-4-5</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color=\"primary\" onClick={this.handleClose}>\n                            OK\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Typography variant=\"h4\" gutterBottom>\n                    Material-UI\n                </Typography>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                    example project\n                </Typography>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.handleClick}\n                >\n                    Super Secret Password\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default withRoot(withStyles(styles)(Index));\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from './App';\nimport Index from \"./components/index\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}